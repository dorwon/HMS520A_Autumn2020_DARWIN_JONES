residuals <- qapply(dt,
function(x) {
x[1] - x[2] * dt_coef[study_id1 == x[6], 2]
},
MARGIN = 1)
View(residuals)
?as.data.table
dt_res <- rbindlist(residuals)
View(dt_res)
dt_res[, c('cov1', 'cov2', 'cov3', 'study_id1')] =
dt[, c('cov1', 'cov2', 'cov3', 'study_id1')]
View(dt_res)
# reformat residuals, add covariates and study_id labels
dt_res <- rbindlist(residuals, use.names = "residual")
# reformat residuals, add covariates and study_id labels
dt_res <- rbindlist(residuals, use.names = "FALSE")
# reformat residuals, add covariates and study_id labels
dt_res <- rbindlist(residuals, use.names = FALSE)
View(dt_res)
# reformat residuals, add covariates and study_id labels
dt_res <- rbindlist(residuals)
setnames(dt_res, "exposure", "residual")
dt_res[, c('cov1', 'cov2', 'cov3', 'study_id1')] =
dt[, c('cov1', 'cov2', 'cov3', 'study_id1')]
View(dt_res)
# plot
p3 <- ggplot(dt_res, aes(residual, cov1)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 2.5) +
scale_fill_discrete(palette = 'Set3')
p4 <- ggplot(dt_res, aes(residual, cov2)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 2.5) +
scale_fill_discrete(palette = 'Set3')
p5 <- ggplot(dt_res, aes(residual, cov3)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 2.5) +
scale_fill_discrete(palette = 'Set3')
grid.arrange(p3, p4, p5, nrow = 1)
# plot
p3 <- ggplot(dt_res, aes(residual, cov1)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
p4 <- ggplot(dt_res, aes(residual, cov2)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
p5 <- ggplot(dt_res, aes(residual, cov3)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
grid.arrange(p3, p4, p5, nrow = 1)
# compute correlation
cor <- apply(dt_res,
function(x) {
cor(dt_res$residual, x)
},
MARGIN = 2)
cor
cor(dt$exposure, x)
# compute correlation coefficients
correlations <- apply(dt,
function(x) {
cor(dt$exposure, x)
},
MARGIN = 2)
correlations
# compute correlation
cor_res <- apply(dt_res,
function(x) {
cor(dt_res$residual, x)
},
MARGIN = 2)
dt[,correlation_1 := cor(obs, exposure), by = study_id1]
View(dt)
dt[,correlation_1 := cor(obs, exposure), by = study_id1]
dt[,correlation_2 := cor(obs, exposure), by = study_id2]
View(dt)
summary(dt$correlation_1)
summary(dt$correlation_2)
View(p4)
model1 <- regress_group_data(data = dt, group_id = 'study_id1', obs = 'obs', cov = c('exposure', 'cov1'))
View(model1)
model1 <- regress_group_data(data = dt,
group_id = 'study_id1',
obs = 'obs',
cov = c('exposure', 'cov1'),
include_intercept = FALSE)
View(model1)
View(model1)
lme4
?lme4
??lme4
install.packages("lme4")
library(lme4)
f1 <- lmer(formula = obs ~ cov1 + exposure,
data = dt)
View(dt)
f1 <- lmer(formula = obs ~ cov1 + (1 + exposure),
data = dt)
f1 <- lmer(formula = obs ~ cov1 * studyid_1 + (1 + exposure|study_id1),
data = dt)
f1 <- lmer(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
View(f1)
ggplot(fortify(f1), aes(obs, exposure, color = factor (sudy_id1)))
f1 <- glm(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
View(f1)
ggplot(fortify(f1), aes(obs, exposure, color = factor (sudy_id1)))
ggplot(fortify(f1), aes(obs, exposure, color = factor(study_id1)))
ggplot(fortify(f1), aes(obs, cov1, color = factor(study_id1)))
ggplot(fortify(f1), aes(obs, cov1, color = factor(study_id1))) + geom_curve()
ggplot(fortify(f1), aes(obs, cov1, color = factor(study_id1))) + geom_point()
ggplot(fortify(f1), aes(obs, cov1, color = factor(study_id1))) + geom_line()
ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) + geom_line()
f1 <- lm(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) + geom_line()
f1 <- glm(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) + geom_line()
View(f1)
ggplot(fortify(f1), aes(cov1[1], obs[1], color = factor(study_id1))) + geom_line()
ggplot(fortify(f1), aes(cov1[1:2], obs[1:2], color = factor(study_id1))) + geom_line()
ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) + geom_line()
lin_mod <- ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) + geom_line()
View(lin_mod)
lin_mod <- ggplot(fortify(f1["data"]), aes(cov1, obs, color = factor(study_id1))) + geom_line()
fortify(f1)
View(fortify(f1))
ttt <- fortify(f1)
ttt[study_id == 1]
ttt[study_id1 == 1]
ttt['study_id1' == 1]
models <- rep(NA, 10)
# graph all predictions
lin_mod <- ggplot(fortify(f1["data"]), aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
# graph all predictions
lin_mod <- ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
# graph all predictions
ggplot(fortify(f1), aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
fort <- fortify(f1)
graphs <- rep(NA, 10)
1:length(graphs)
typeof(fort)
is.data.frame(fort)
for(i in 1:length(graphs)) {
#select data from study_id == i
pred <- subset(fort, study_id1 == i, select = c(obs, cov1))
data <- subset(dt, study_id1 == i, select = c(obs, cov1))
graphs[i] <- ggplot(data = )
}
graphs <- rep(NA, 10)
for(i in 1:length(graphs)) {
#select data from study_id == i
pred <- subset(fort, study_id1 == i, select = c(obs, cov1))
data <- subset(dt, study_id1 == i, select = c(obs, cov1))
graphs[i] <- ggplot(pred, aes(cov1, obs)) + geom_line(size = 1.5) +
ggplot(data, aes(cov1, obs)) + geom_line(size = 1.5)
}
graphs[i] <- ggplot(pred, aes(cov1, obs)) + geom_line(size = 1.5) +
geom_line(data, aes(cov1, obs)) + geom_line(size = 1.5)
graphs[i] <- ggplot(pred, aes(cov1, obs)) + geom_line(size = 1.5) +
geom_line(data) + geom_line(size = 1.5)
View(pred)
View(data)
View(dt)
pred == data
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
View(p5)
# graph all predictions
p6 <- ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
grid.arrange(p1, p6, nrow = 1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
geom_line(size = 1.5)
f1 <- lmer(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
View(fort)
summary(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary((fun.data = mean_se, geom="pointrange"))
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary()
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary()
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun.y = mean)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun.y = mean, geom = 'line')
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun.y = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1), size =2) +
stat_summary(aes(y=.fitted), fun.y = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1), size = 2)) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun.y = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1), size = 2)) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs)) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs), color = study_id1) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
, color = factor(study_id1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = study_id1)) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1|exposure),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- lmer(formula = obs ~ cov1+ (1|exposure),
data = dt)
f1 <- lmer(formula = obs ~ (1|cov1) + (1|exposure),
data = dt)
f1 <- lmer(formula = obs ~ (1|cov1) + (1 + exposure),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- nlmer(formula = obs ~ (1|cov1) + (1 + exposure),
data = dt)
f1 <- nlmer(formula = obs ~ cov1 + (1 + exposure|1),
data = dt)
f1 <- nlmer(formula = obs ~ cov1 * study_id1 + (1 + exposure|study_id1),
data = dt)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- nlmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- nlmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
f1 <- glmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = ) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
View(f1)
source('~/hms520jones/homeworks/homework5.R')
grid.arrange(p1, p6, nrow = 1)
model1 <- regress_group_data(data = dt,
group_id = 'study_id1',
obs = 'obs',
cov = c('exposure', 'cov1'),
include_intercept = FALSE)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
f1 <- lmer(formula = obs ~ cov1 + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
View(f1)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
source('~/hms520jones/homeworks/homework5.R')
source('~/hms520jones/homeworks/homework5.R')
f1 <- glm(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
# graph all predictions
ggplot(fort, aes(cov1, obs, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
summary(f1)
f1 <- lmer(formula = obs ~ cov1 * study_id1  + (1 + exposure|study_id1),
data = dt)
summary(f1)
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
f1
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1) -1,
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1) + 0,
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure),
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (1|exposure),
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (1 + study_id1|exposure),
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (2|1 + exposure),
data = dt)
f1 <- lmer(formula = obs ~ cov1  + (study_id1|1 + exposure),
data = dt)
p
p
f1 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
fort <- fortify(f1)
source('~/hms520jones/homeworks/homework5.R')
f1\2 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
f2 <- lmer(formula = obs ~ cov1  + (1 + exposure|study_id1),
data = dt)
f2 <- lmer(formula = obs ~ cov1 + (cov1||exposure),
data = dt)
f2 <- lmer(formula = obs ~ cov1 + (cov1||1+exposure),
data = dt)
f2 <- lmer(formula = obs ~ cov1 + (cov1||exposure),
data = dt)
f2 <- lmer(formula = obs ~ cov1 * study_id1 + (cov1||exposure),
data = dt)
f2 <- lmer(formula = obs ~ cov1 * study_id1 + (exposure + 1|cov1),
data = dt)
f2 <- lmer(formula = obs ~ cov1 * study_id1 + (exposure + 1|study_id1),
data = dt)
View(f2)
plot_model(f2)
fort <- fortify(f2)
f2 <- lmer(formula = obs ~ cov1 * study_id1 + (exposure + 1|study_id1),
data = dt)
source('~/hms520jones/homeworks/homework5.R')
f2 <- lmer(formula = obs ~ cov1 * exposure + (1|study_id1),
data = dt)
View(f2)
summary(f2)
fortify(f2)
rm(list = ls())
library(data.table)
library(ggplot2)
library(gridExtra)
library(lme4)
# Problem 1 ---------------------------------------------------------------
# In this problem, we try to answer which study division makes more sense.
# Use your favorite plotting package, and plot obs against exposure by study_id1
# and study_id2. Which one do you think is better to use as a grouping id?
# Explain your reason.
# Load the data
dt <- fread(input = "data/assignment5_data.csv")
# Plot
p1 <- ggplot(dt, aes(exposure, obs)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 2.5) +
scale_fill_discrete(palette = 'Set3')
p2 <- ggplot(dt, aes(exposure, obs)) +
geom_point(aes(colour = factor(study_id2)), size = 3) +
geom_line(aes(colour = factor(study_id2), group = study_id2), size = 2.5) +
scale_fill_discrete(palette = 'Set3')
grid.arrange(p1, p2, nrow = 2)
# compute correlation coefficients
correlations <- apply(dt,
function(x) {
cor(dt$exposure, x)
},
MARGIN = 2)
dt[,correlation_1 := cor(obs, exposure), by = study_id1]
dt[,correlation_2 := cor(obs, exposure), by = study_id2]
summary(dt$correlation_1)
summary(dt$correlation_2)
# grouping 1 makes more sense than the 2nd because the obs follow a slightly
# more consistent logarithmic like line. for study_id2, there does not
# look like a correlation between exposure and obs. Th./e correlation coefficients
# are also higher for group1
# Problem 2 ---------------------------------------------------------------
# In this problem, we try to answer which covariates should be included
# in the model.
#
# - Use the `regress_group_data` function you created in last homework to
#   compute the coefficient for `exposure` of each group (`use_intercept = FALSE`).
# - Compute the "residual" between the observation and the prediction.
#   (`residual = obs - exposure*coef`)
# - For each group compute the correlations between the `residual` and `cov1` ,
#   `cov2` and `cov3`. Based on these correlations, which covariate you think
#    should be in the final model?
# get functions
source(file = "HW4_functions.R")
# get coefficients
c1 <- regress_group_data(data = dt,
group_id = 'study_id1',
obs = 'obs',
cov = 'exposure',
include_intercept = FALSE)
dt_coef <- as.data.table(c1)
# calculate the residuals
residuals <- apply(dt,
function(x) {
x[1] - x[2] * dt_coef[study_id1 == x[6], 2]
},
MARGIN = 1)
# Compare the correlation between the residuals and the other covariates
# reformat residuals, add covariates and study_id labels
dt_res <- rbindlist(residuals)
setnames(dt_res, "exposure", "residual")
dt_res[, c('cov1', 'cov2', 'cov3', 'study_id1')] =
dt[, c('cov1', 'cov2', 'cov3', 'study_id1')]
# plot
p3 <- ggplot(dt_res, aes(residual, cov1)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
p4 <- ggplot(dt_res, aes(residual, cov2)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
p5 <- ggplot(dt_res, aes(residual, cov3)) +
geom_point(aes(colour = factor(study_id1)), size = 3) +
geom_line(aes(colour = factor(study_id1), group = study_id1), size = 1.5) +
scale_fill_discrete(palette = 'Set3')
grid.arrange(p3, p4, p5, nrow = 1)
# compute correlation
cor_res <- apply(dt_res,
function(x) {
cor(dt_res$residual, x)
},
MARGIN = 2)
model1 <- regress_group_data(data = dt,
group_id = 'study_id1',
obs = 'obs',
cov = c('exposure', 'cov1'),
include_intercept = FALSE)
f2 <- lmer(formula = obs ~ cov1 * exposure + (1|study_id1),
data = dt)
fit <- lmer(formula = obs ~ cov1 * exposure + (1|study_id1),
data = dt)
# graph all predictions
ggplot(fit, aes(.fitted, residual, color = factor(study_id1))) +
stat_summary(fun.data = mean_se) +
stat_summary(aes(y=.fitted), fun = mean, geom = 'line')
